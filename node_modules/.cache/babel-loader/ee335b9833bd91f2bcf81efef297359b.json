{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\OneDrive\\\\codeshp\\\\Tic-Tac-Toe\\\\src\\\\components\\\\scoreboard.jsx\";\n///\n// src/components/scoreboard.jsx\n///\nimport React from 'react';\nimport { Link } from 'react-router-dom'; // Import Storage object\n\nimport { Storage } from './../storage/storage'; // Create Scoreboard component\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class Scoreboard extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      scoreboard: []\n    };\n  }\n\n  // After component mounts, load any data from local storage and update component state\n  async componentDidMount() {\n    let storage = await new Storage().getData();\n    this.setState({\n      scoreboard: storage\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Recent games:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: this.state.scoreboard.map((leader, key) => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: leader\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 20\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/board\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          children: \"Start new game\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/USER/OneDrive/codeshp/Tic-Tac-Toe/src/components/scoreboard.jsx"],"names":["React","Link","Storage","Scoreboard","Component","state","scoreboard","componentDidMount","storage","getData","setState","render","map","leader","key"],"mappings":";AAAA;AACA;AACA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB,C,CAEA;;AACA,SAASC,OAAT,QAAwB,sBAAxB,C,CAEA;;;AACA,OAAO,MAAMC,UAAN,SAAyBH,KAAK,CAACI,SAA/B,CAAyC;AAAA;AAAA;AAAA,SAC9CC,KAD8C,GACtC;AACNC,MAAAA,UAAU,EAAE;AADN,KADsC;AAAA;;AAK5C;AACqB,QAAjBC,iBAAiB,GAAG;AACxB,QAAIC,OAAO,GAAG,MAAM,IAAIN,OAAJ,GAAcO,OAAd,EAApB;AAEA,SAAKC,QAAL,CAAc;AACZJ,MAAAA,UAAU,EAAEE;AADA,KAAd;AAGD;;AAEDG,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAA,kBACG,KAAKN,KAAL,CAAWC,UAAX,CAAsBM,GAAtB,CAA0B,CAACC,MAAD,EAASC,GAAT,KAAiB;AAC1C,8BAAO;AAAA,sBAAeD;AAAf,aAASC,GAAT;AAAA;AAAA;AAAA;AAAA,kBAAP;AACD,SAFA;AADH;AAAA;AAAA;AAAA;AAAA,cAJF,eAWE,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,QAAT;AAAA,+BACE;AAAQ,UAAA,SAAS,EAAC,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAXF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAiBD;;AAhC6C","sourcesContent":["///\r\n// src/components/scoreboard.jsx\r\n///\r\nimport React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\n// Import Storage object\r\nimport { Storage } from './../storage/storage'\r\n\r\n// Create Scoreboard component\r\nexport class Scoreboard extends React.Component {\r\n  state = {\r\n    scoreboard: []\r\n  }\r\n\r\n    // After component mounts, load any data from local storage and update component state\r\n  async componentDidMount() {\r\n    let storage = await new Storage().getData()\r\n\r\n    this.setState({\r\n      scoreboard: storage\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"game\">\r\n        <h1>Recent games:</h1>\r\n\r\n                {/* List with previous games */}\r\n        <ul>\r\n          {this.state.scoreboard.map((leader, key) => {\r\n            return <li key={key}>{leader}</li>\r\n          })}\r\n        </ul>\r\n\r\n                {/* Link to start new game */}\r\n        <Link to=\"/board\">\r\n          <button className=\"btn\">Start new game</button>\r\n        </Link>\r\n      </div>\r\n    )\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}